{"version":3,"sources":["components/FAQContent.js","components/FAQPanel.js","components/FAQHolder.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["faq","title","desc","FAQPanel","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","open","toggle","setState","inherits","createClass","key","value","react_default","a","createElement","className","onClick","props","ExpandLess_default","ExpandMore_default","Collapse_default","in","dangerouslySetInnerHTML","__html","Component","FAQHolder","display","questions","map","q","i","components_FAQPanel","App","index_es","variant","components_FAQHolder","theme","createMuiTheme","overrides","MuiButton","text","backgroundColor","borderRadius","border","color","height","padding","margin","boxShadow","fontFamily","fontWeight","fontSize","&:hover","MuiBottomNavigation","root","MuiBottomNavigationAction","iconOnly","wrapper","MuiDialogActions","action","palette","primary","main","light","contrastText","secondary","typography","useNextVariants","h1","marginBottom","h2","h3","h4","h5","h6","Boolean","window","location","hostname","match","ReactDOM","render","styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c4f60a8.chunk.js","sourcesContent":["const faq = [\n    {\n        title: `How do I download the app?`,\n        desc: `Check below for instructions on how to install the web app on your device:\n            <br />\n            <h2>iOS:</h2> \n            Open up <a href=\"https://boba.watch\">https://boba.watch</a> in Safari. \n            <br />\n            &emsp;1. Click on the [ + ] icon on the bottom.\n            <br />\n            &emsp;2. Find the 'Add to Home Screen' option \n            <br />\n            &emsp;3. Confirm 'Add'\n            <div class=\"images images-ios\">\n                <div id=\"ios-1\" class=\"image\"></div>\n                <div id=\"ios-2\" class=\"image\"></div>\n                <div id=\"ios-3\" class=\"image\"></div>\n            </div>\n            After the download, the start icon should be visible on your home screen.\n            <br />\n            <h2>Android:</h2> \n            Open up <a href=\"https://boba.watch\">https://boba.watch</a> in Chrome. \n            <br />\n            &emsp;1. Select the 3 dot icon in the top-right corner\n            <br />\n            &emsp;2. Find the 'Add to Home screen' option\n            <br />\n            &emsp;3. Confirm 'Add'\n            <br />\n            <div class=\"images images-android\">\n                <div id=\"android-1\" class=\"image\"></div>\n                <div id=\"android-2\" class=\"image\"></div>\n                <div id=\"android-3\" class=\"image\"></div>\n            </div>\n            After the download, the start icon should be visible on your home screen.\n        `\n    },\n    {\n        title: `When will desktop mode come out?`,\n        desc: `Desktop mode is a feature that we are currently working on. \n        Since we're only a small team of 3, it takes time to design, develop, \n        and ship a functionality we want to include. It's a priority and we hope \n        to have it done soon! In the meantime, you can shape your browser into\n        the corresponding mobile dimensions to get the same effect`\n    }   \n];\n\nexport default faq;","import React, { Component } from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport './styles/FAQPanel.css';\n\nexport class FAQPanel extends Component {\n    state = {\n        open: false\n    }\n    toggle = () => {\n        this.setState(state => ({ open: !state.open }));\n    }\n    render() {\n        return (\n            <div className=\"thaman-color\">\n                <div className=\"faq-question--title\" onClick={this.toggle}>\n                    {this.props.title}\n                    <div className=\"expand-icon\">\n                        {this.state.open ? <ExpandLessIcon /> : <ExpandMoreIcon/>}\n                    </div>\n                </div>\n                <Collapse in={this.state.open} >\n                    <div className=\"faq-question--description\" dangerouslySetInnerHTML={{__html: this.props.desc}}>\n                    </div>\n                </Collapse>\n            </div>\n        )\n    }\n}\n\nexport default FAQPanel\n","import React, { Component } from 'react';\nimport questions from './FAQContent.js';\nimport FAQPanel from './FAQPanel.js';\nimport './styles/FAQHolder.css';\n\n\nexport class FAQHolder extends Component {\n    display = () => {\n        return questions.map((q, i) => <FAQPanel key={i} title={q.title} desc={q.desc} />);\n    }\n    render() {\n        return (\n        <div>\n            {this.display()}\n        </div>\n        )\n    }\n}\n\nexport default FAQHolder;\n","import React from 'react';\nimport '@material-ui/core';\nimport './App.css';\nimport FAQHolder from './components/FAQHolder';\nimport {Typography} from '@material-ui/core';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"faq-title--holder\">\n                <div className=\"faq-title--logo\"></div>\n                <Typography variant=\"h1\">boba watch</Typography>\n            </div>\n            <div className=\"faq-section--label\">\n                FAQ <span> Frequently Asked Questions </span>\n            </div>\n            <div className=\"faq-holder\">\n                <FAQHolder/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {createMuiTheme} from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        text: {\n          backgroundColor: '#F68080',\n          borderRadius: 3,\n          border: 0,\n          color: 'white',\n          height: 30,\n          padding: '0 30px',\n          margin: '20px',\n          boxShadow: '0 3px 5px 2px rgba(255, 105, 135, 0.3)',\n          fontFamily: 'Poppins',\n          fontWeight: 700,\n          fontSize: 14,\n          '&:hover': {\n            backgroundColor: '#FFDCDC'\n          }\n        },\n      },\n      MuiBottomNavigation: {\n        root: {\n            backgroundColor: '#FFAFA4',\n        }\n      },\n      MuiBottomNavigationAction: {\n        root: {\n            color: '#000000',\n        },\n        iconOnly: {\n            color: '#FF0000'\n        },\n        wrapper: {\n            color: '#FFFFFF ',\n        }\n      },\n      MuiDialogActions: {\n        action: {\n          color: '#FFFFFF'\n        },\n      }\n    },\n    palette: {\n        primary: {\n          main: '#F68080',\n          light: '#FFDCDC',\n          contrastText:'#FFFFFF'\n        },\n        secondary: {\n            main: '#FFFFFF',\n            contrastText: '#F68080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n        h1: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#000000',\n            fontSize: 44,\n            marginBottom: 20\n        },\n        h2: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 48,\n            margin: 0\n        },\n        h3: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#F68080',\n            fontSize: 24,\n            marginBottom: '16px'\n        },\n        h4: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 24,\n        },\n        h5: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#000000',\n            fontSize: 18,\n        },\n        h6: {\n            fontFamily: 'Poppins',\n            color: '#F68080',\n            fontSize: 12,\n        }\n    },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme.js';\nimport * as serviceWorker from './serviceWorker';\nimport {MuiThemeProvider} from '@material-ui/core';\n\nReactDOM.render(<MuiThemeProvider theme={theme}><App /></MuiThemeProvider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}