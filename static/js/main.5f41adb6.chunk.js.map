{"version":3,"sources":["components/FAQContent.js","components/FAQPanel.js","components/FAQHolder.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["faq","title","desc","FAQPanel","state","open","toggle","setState","className","onClick","this","props","Collapse","in","dangerouslySetInnerHTML","__html","Component","FAQHolder","content","questions","map","q","i","key","componentDidMount","images","document","getElementsByClassName","Array","from","forEach","e","addEventListener","enlarge","img","target","bi","currentStyle","window","getComputedStyle","backgroundImage","slice","replace","fullscreenImage","createElement","style","onclick","body","removeChild","appendChild","App","location","Typography","variant","href","theme","createMuiTheme","overrides","MuiButton","text","backgroundColor","borderRadius","border","color","height","padding","margin","boxShadow","fontFamily","fontWeight","fontSize","MuiBottomNavigation","root","MuiBottomNavigationAction","iconOnly","wrapper","MuiDialogActions","action","palette","primary","main","light","contrastText","secondary","typography","useNextVariants","h1","marginBottom","h2","h3","h4","h5","h6","Boolean","hostname","match","ReactDOM","render","MuiThemeProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f41adb6.chunk.js","sourcesContent":["const faq = [\n    {\n        title: `How do I download the app?`,\n        desc: `Check below for instructions on how to install the web app on your device:\n            <br />\n            <h2>iOS:</h2> \n            Open up <a href=\"https://boba.watch\">https://boba.watch</a> in Safari (not Chrome). \n            <br />\n            &emsp;1. Click on the [ + ] icon on the bottom.\n            <br />\n            &emsp;2. Find the 'Add to Home Screen' option \n            <br />\n            &emsp;3. Confirm 'Add'\n            <div class=\"images images-ios\">\n                <div id=\"ios-1\" class=\"image\"></div>\n                <div id=\"ios-2\" class=\"image\"></div>\n                <div id=\"ios-3\" class=\"image\"></div>\n            </div>\n            After the download, the start icon should be visible on your home screen.\n            <br />\n            <h2>Android:</h2> \n            Open up <a href=\"https://boba.watch\">https://boba.watch</a> in Chrome. \n            <br />\n            &emsp;1. Select the 3 dot icon in the top-right corner\n            <br />\n            &emsp;2. Find the 'Add to Home screen' option\n            <br />\n            &emsp;3. Confirm 'Add'\n            <br />\n            <div class=\"images images-android\">\n                <div id=\"android-1\" class=\"image\"></div>\n                <div id=\"android-2\" class=\"image\"></div>\n                <div id=\"android-3\" class=\"image\"></div>\n            </div>\n            After the download, the start icon should be visible on your home screen.\n        `\n    },\n    {\n        title: `How to use Boba Watch?`,\n        desc: `Boba Watch is a memey, finance focused app that keeps tracks of your boba drinking\n        metrics such as the time, place, and cost of the purchases you make. \n        <br />\n        <br />\n        To get started, add a drink by pressing the ( + ) icon on the bottom of your home screen.\n        <div class=\"images images-add\">\n        <div id=\"add-1\" class=\"image\"></div>\n        </div>\n        After pressing the add icon, the app should prompt you for details of what drink to add.\n        <div class=\"images images-add\">\n        <div id=\"add-2\" class=\"image\"></div>\n        </div>\n        The only required sections are the price and the date/time. The date/time will automatically be set\n        to the current time and if you want to change it, simply tap on it to edit the time. The rest of \n        the sections can be left blank although it's recommended to fill it out (with the exception of the description).\n        <br />\n        <br />\n        After filling out the details, tap \"Add\" to complete the process and wait for the confirmation prompt. Ensure you \n        have a good internet connection or you can try at another time.\n        `\n    },\n    {\n        title: `Why do I need a Facebook account to login?`,\n        desc: `We don't want people to abuse our app by making a billion accounts and taking\n        the service down for everyone so we currently use Facebook's login system since they \n        a ton of security precautions in place to prevent these things. Your privacy is \n        important to us and the only data we use from your Facebook account is your name\n        and your most recent profile picture. (We do plan on adding a Google and Twitter sign up\n        in the near future)\n        <br />\n        Also who likes remembering another password with numbers, special symbols, both upper and\n        lower case letters and a mininmum length of 25 characters? Definately not me.`\n    },\n    {\n        title: `When will desktop mode come out?`,\n        desc: `Desktop mode is a feature that we are currently working on. \n        Since we're only a small team of 3, it takes time to design, develop, \n        and ship a functionality we want to include. It's a priority and we hope \n        to have it done soon! In the meantime, you can shape your browser into\n        the corresponding mobile dimensions to get the same effect`\n    },\n    {\n        title: `Do my drinks have to be boba drinks?`,\n        desc: `No. You can do whatever you want. Just keep in mind, if you add random things\n        that aren't drinks, your stats will turn out weird since they will be added into the\n        calculations. This isn't meant to be a replacement financial app - it's literally\n        just a meme.`\n    },\n    {\n        title: `Drinks aren't updated on new device`,\n        desc: `Logging out and logging back in will ensure that your app makes a new call\n        to our server to retrieve the latest information stored on your account.\n        To log out, click on your user profile on the top right corner and click logout.`\n    },\n    {\n        title: `Public / private profile issues`,\n        desc: `If you're a new user, make sure you have atleast one drink added. If\n        there's nothing to share, then you won't have a link.\n        <br />\n        Toggling the public setting on your user settings and getting a successful \n        alert message will ensure that our database gets a new setting change. This problem\n        usually arises when you're using multiple devices and one has not updated.`\n    },\n    {\n        title: `Suggestions and Features`,\n        desc: `We would LOVE to hear from the community to see what kind of features you \n        would like to see. Let us know on our <a href=\"https://www.facebook.com/bobawatch/\">\n         facebook page </a> and we'll try to get back to you!`\n    }\n];\n\nexport default faq;","import React, { Component } from 'react';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport './styles/FAQPanel.css';\n\nexport class FAQPanel extends Component {\n    state = {\n        open: false\n    }\n    toggle = () => {\n        this.setState(state => ({ open: !state.open }));\n    }\n    render() {\n        return (\n            <div className=\"thaman-color\">\n                <div className=\"faq-question--title\" onClick={this.toggle}>\n                    {this.props.title}\n                    <div className=\"expand-icon\">\n                        {this.state.open ? <ExpandLessIcon /> : <ExpandMoreIcon/>}\n                    </div>\n                </div>\n                <Collapse in={this.state.open} >\n                    <div className=\"faq-question--description\" dangerouslySetInnerHTML={{__html: this.props.desc}}>\n                    </div>\n                </Collapse>\n            </div>\n        )\n    }\n}\n\nexport default FAQPanel\n","import React, { Component } from 'react';\nimport questions from './FAQContent.js';\nimport FAQPanel from './FAQPanel.js';\nimport './styles/FAQHolder.css';\n\n\nexport class FAQHolder extends Component {\n    state = {\n        content: questions.map((q, i) => <FAQPanel key={i} title={q.title} desc={q.desc} />)\n    }\n    componentDidMount = () => {\n        let images = document.getElementsByClassName(\"image\");\n        Array.from(images).forEach( e => {\n            e.addEventListener('click', this.enlarge);\n        });\n    }\n    enlarge = (e) => {\n        let img = e.target,\n            style = img.currentStyle || window.getComputedStyle(img, false),\n            bi = style.backgroundImage.slice(4, -1).replace(/\"/g, \"\");\n        \n        let fullscreenImage = document.createElement('div');\n        fullscreenImage.className = \"fullscreen-image\";\n        fullscreenImage.style.backgroundImage = `url('${bi}')`;\n        fullscreenImage.onclick = () => {\n            document.body.removeChild(fullscreenImage);\n        }\n        document.body.appendChild(fullscreenImage);\n    };\n    render() {\n        return (\n        <div>\n            {this.state.content}\n        </div>\n        )\n    }\n}\n\nexport default FAQHolder;\n","import React from 'react';\nimport '@material-ui/core';\nimport './App.css';\nimport FAQHolder from './components/FAQHolder';\nimport {Typography} from '@material-ui/core';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"faq-title--holder\" onClick={() => {window.location = 'https://boba.watch/'} }>\n                <div className=\"faq-title--logo\"></div>\n                <Typography variant=\"h1\">boba watch</Typography>\n            </div>\n            <div className=\"faq-section--label\">\n                FAQ <span> Frequently Asked Questions </span>\n            </div>\n            <div className=\"faq-holder\">\n                <FAQHolder/>\n            </div>\n            <div className=\"footer\">\n                <a href=\"https://www.termsfeed.com/privacy-policy/e27edfdb317844b935f5c050baeed143\"> Privacy Policy </a>\n                <a href=\"https://www.instagram.com/bingeboba/\"> Instagram </a>\n                <a href=\"https://www.facebook.com/bobawatch/\"> Facebook </a>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {createMuiTheme} from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        text: {\n          backgroundColor: '#F68080',\n          borderRadius: 3,\n          border: 0,\n          color: 'white',\n          height: 30,\n          padding: '0 30px',\n          margin: '20px',\n          boxShadow: '0 3px 5px 2px rgba(255, 105, 135, 0.3)',\n          fontFamily: 'Poppins',\n          fontWeight: 700,\n          fontSize: 14,\n          '&:hover': {\n            backgroundColor: '#FFDCDC'\n          }\n        },\n      },\n      MuiBottomNavigation: {\n        root: {\n            backgroundColor: '#FFAFA4',\n        }\n      },\n      MuiBottomNavigationAction: {\n        root: {\n            color: '#000000',\n        },\n        iconOnly: {\n            color: '#FF0000'\n        },\n        wrapper: {\n            color: '#FFFFFF ',\n        }\n      },\n      MuiDialogActions: {\n        action: {\n          color: '#FFFFFF'\n        },\n      }\n    },\n    palette: {\n        primary: {\n          main: '#F68080',\n          light: '#FFDCDC',\n          contrastText:'#FFFFFF'\n        },\n        secondary: {\n            main: '#FFFFFF',\n            contrastText: '#F68080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n        h1: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#000000',\n            fontSize: 44,\n            marginBottom: 20\n        },\n        h2: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 48,\n            margin: 0\n        },\n        h3: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#F68080',\n            fontSize: 24,\n            marginBottom: '16px'\n        },\n        h4: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 24,\n        },\n        h5: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#000000',\n            fontSize: 18,\n        },\n        h6: {\n            fontFamily: 'Poppins',\n            color: '#F68080',\n            fontSize: 12,\n        }\n    },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme.js';\nimport * as serviceWorker from './serviceWorker';\nimport {MuiThemeProvider} from '@material-ui/core';\n\nReactDOM.render(<MuiThemeProvider theme={theme}><App /></MuiThemeProvider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}